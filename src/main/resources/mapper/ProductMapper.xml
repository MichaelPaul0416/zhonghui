<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tibbers.zhonghui.dao.IProductDao">

    <resultMap id="ProductResult" type="com.tibbers.zhonghui.model.Product">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="limitcustomfee" jdbcType="VARCHAR" property="limitcustomfee"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
    </resultMap>

    <resultMap id="ProductResultShow" type="com.tibbers.zhonghui.model.Product">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="limitcustomfee" jdbcType="VARCHAR" property="limitcustomfee"/>
        <result column="familyid" jdbcType="VARCHAR" property="familyid"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
    </resultMap>

    <resultMap id="customProductQuery" type="java.util.Map">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="familyid" jdbcType="VARCHAR" property="familyid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="limitcustomfee" jdbcType="VARCHAR" property="limitcustomfee"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
        <result column="salestate" jdbcType="VARCHAR" property="salestate"/>
        <result column="remaindernum" jdbcType="INTEGER" property="remaindernum"/>
    </resultMap>

    <resultMap id="queryProductCustomer" type="java.util.Map">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="familyid" jdbcType="VARCHAR" property="familyid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="transportfee" jdbcType="INTEGER" property="transportfee"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="limitcustomfee" jdbcType="VARCHAR" property="limitcustomfee"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
        <result column="salestate" jdbcType="VARCHAR" property="salestate"/>
        <result column="remaindernum" jdbcType="INTEGER" property="remaindernum"/>
    </resultMap>

    <resultMap id="productQuery" type="java.util.Map">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="limitcustomfee" jdbcType="VARCHAR" property="limitcustomfee"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
        <result column="salestate" jdbcType="VARCHAR" property="salestate"/>
        <result column="remaindernum" jdbcType="INTEGER" property="remaindernum"/>
        <result column="auditstate" jdbcType="VARCHAR" property="auditstate"/>
    </resultMap>

    <resultMap id="imagesResult" type="java.util.Map">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
    </resultMap>

    <resultMap id="onlyOneResult" type="java.util.Map">
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="familyid" jdbcType="VARCHAR" property="familyid"/>
    </resultMap>

    <select id="checkOnlyUploadOneProduct" resultMap="onlyOneResult" >
        select count(productid) as number,familyid from tproduct where productid in (select productid from tproductbelong where accountid = #{_parameter} and salestate != '4') group by familyid
    </select>

    <insert id="insertSingleProduct" parameterType="com.tibbers.zhonghui.model.Product">
        insert into tproduct ( familyid,productid,unitprice,productname,note,itemid,imagepath,color,valuescore,productgrade,fieldmeaning,transportfee,limitcustomfee,reverse1,reverse2)
        values(#{familyid},#{productid},#{unitprice},#{productname},#{note},#{itemid},#{imagepath},#{color},#{valuescore},#{productgrade},#{fieldmeaning},#{transportfee},#{limitcustomfee},#{reverse1},#{reverse2})
    </insert>

    <insert id="insertBatchProduct" parameterType="java.util.List">
        insert into tproduct ( familyid,productid,unitprice,productname,note,itemid,imagepath,color,valuescore,productgrade,fieldmeaning,transportfee,limitcustomfee,reverse1,reverse2) values
        <foreach collection="list" item="item" separator="," index="index">
            (#{item.familyid},#{item.productid},#{item.unitprice},#{item.productname},#{item.note},#{item.itemid},#{item.imagepath},#{item.color},#{item.valuescore},#{item.productgrade},#{item.fieldmeaning},#{item.transportfee},#{item.limitcustomfee},#{item.reverse1},#{item.reverse2})
        </foreach>
    </insert>

    <update id="uploadImage" parameterType="com.tibbers.zhonghui.model.Product">
        update tproduct set imagepath = #{imagepath} where productid = #{productid}
    </update>

    <select id="queryByProductId" parameterType="java.lang.String" resultMap="queryProductCustomer">
        select t1.productid,t1.familyid,t1.unitprice,t1.productname,t1.note,t1.itemid,t1.imagepath,t1.color,t1.valuescore,t1.transportfee,t1.productgrade,t1.fieldmeaning,t1.transportfee,t1.limitcustomfee,t1.reverse1,t1.reverse2,t2.salestate,t2.remaindernum
        from tproduct t1,tproductbelong t2
        where t1.productid = t2.productid and t1.productid = #{_parameter}
    </select>

    <select id="queryProductByPage" parameterType="com.tibbers.zhonghui.model.common.Pager" resultMap="ProductResult">
        select  productid,unitprice,productname,note,itemid,imagepath,color,valuescore,productgrade,fieldmeaning,transportfee,limitcustomfee,reverse1,reverse2 from tproduct limit  #{startLine},#{offset}
    </select>

    <select id="queryByProductStates" parameterType="java.util.Map" resultMap="customProductQuery">
        select  t1.productid,t1.familyid,t1.unitprice,t1.productname,t1.note,t1.itemid,t1.imagepath,t1.color,t1.valuescore,t1.productgrade,t1.fieldmeaning,t1.transportfee,t1.limitcustomfee,t1.reverse1,t1.reverse2,t2.salestate,t2.remaindernum from tproduct t1,tproductbelong t2
        where t1.productid = t2.productid and t1.productid in (select productid from tproductbelong
        <where>
            <if test="states.length != 0">
                salestate in (
                <foreach collection="states" index="index" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
        </where>
        group by productid)
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>
    </select>

    <select id="queryProducts" parameterType="java.util.Map" resultMap="ProductResultShow">
        select t1.productid,t1.unitprice,t1.productname,t1.note,t1.itemid,t1.imagepath,t1.color,t1.valuescore,t1.productgrade,t1.fieldmeaning,t1.transportfee,t1.limitcustomfee,t1.familyid,t1.reverse1,t1.reverse2,t2.remaindernum
        from tproduct t1,tproductbelong t2
        WHERE t1.productid = t2.productid and t1.productid in (select productid from tproductbelong
        <where>
            <if test="states.length != 0">
                salestate in (
                <foreach collection="states" index="index" item="item" separator=",">
                    #{item}
                </foreach>
                )
            </if>
        </where>
        group by productid)
        <if test="product != null">
             <if test="product.productid != null and !&quot;&quot;.equals(product.productid) ">and t1.productid = #{product.productid}  </if>
             <if test="product.productname != null and !&quot;&quot;.equals(product.productname) ">and t1.productname like '%' #{product.productname} '%'</if>
             <if test="product.note != null and !&quot;&quot;.equals(product.note) ">and  t1.note like '%' #{product.note} '%'</if>
             <if test="product.itemid != null and !&quot;&quot;.equals(product.itemid) ">and t1.itemid = #{product.itemid} </if>
             <if test="product.color != null and !&quot;&quot;.equals(product.color) "> and t1.color = #{product.color} </if>
             <if test="product.productgrade != null and !&quot;&quot;.equals(product.productgrade) "> and t1.productgrade like '%' #{product.productgrade} '%'</if>
             <if test="product.reverse1 != null "> and t1.reverse1 = #{product.reverse1} </if>
             <if test="product.reverse2 != null "> and t1.reverse2 = #{product.reverse2} </if>
        </if>
        <if test="pager != null">limit #{pager.startLine},#{pager.offset}</if>
    </select>

    <!--会员查询自己的上传产品的列表-->
    <select id="vipQueryUploadProducts" parameterType="java.util.Map" resultMap="productQuery">
        select a.*,b.auditstate from (
        select t1.productid,t1.unitprice,t1.productname,t1.note,t1.itemid,t1.imagepath,t1.color,t1.valuescore,t1.productgrade,t1.fieldmeaning,t1.transportfee,t1.limitcustomfee,t1.reverse1,t1.reverse2,t2.salestate,t2.remaindernum
        from tproduct t1,tproductbelong t2,taccount t3
        where t1.productid = t2.productid and t2.accountid = t3.accountid
        <if test="product != null">
                <if test="product.productid != null and !&quot;&quot;.equals(product.productid) ">and t1.productid = #{product.productid}  </if>
                <if test="product.productname != null and !&quot;&quot;.equals(product.productname) ">and t1.productname like '%' #{product.productname} '%'</if>
                <if test="product.note != null and !&quot;&quot;.equals(product.note) ">and  t1.note like '%' #{product.note} '%'</if>
                <if test="product.itemid != null and !&quot;&quot;.equals(product.itemid) ">and t1.itemid = #{product.itemid} </if>
                <if test="product.color != null and !&quot;&quot;.equals(product.color) "> and t1.color = #{product.color} </if>
                <if test="product.productgrade != null and !&quot;&quot;.equals(product.productgrade) "> and t1.productgrade like '%' #{product.productgrade} '%'</if>
                <if test="product.reverse1 != null "> and t1.reverse1 = #{product.reverse1} </if>
                <if test="product.reverse2 != null "> and t1.reverse2 = #{product.reverse2} </if>
            </if>
            <if test="account != null">
                <if test="account.accountid != null and !&quot;&quot;.equals(account.accountid) ">and t3.accountid = #{account.accountid}</if>
                <if test="account.custtype != null and !&quot;&quot;.equals(account.custtype) ">and t3.custtype = #{account.custtype}</if>
            </if>
        ) a,tauditingpros b where a.productid = b.productid
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>
    </select>

    <select id="salerQueryProductsByState" parameterType="java.util.Map" resultMap="customProductQuery">
        select t1.productid,t1.familyid,t1.unitprice,t1.productname,t1.note,t1.itemid,t1.imagepath,t1.color,t1.valuescore,t1.productgrade,t1.fieldmeaning,t1.limitcustomfee,t1.reverse1,t1.reverse2,t2.salestate,t2.remaindernum
        from tproduct t1,tproductbelong t2,taccount t3
        where t1.productid = t2.productid and t2.accountid = t3.accountid
        <if test="product != null">
            <if test="product.productid != null and !&quot;&quot;.equals(product.productid) ">and t1.productid = #{product.productid}  </if>
            <if test="product.productname != null and !&quot;&quot;.equals(product.productname) ">and t1.productname like '%' #{product.productname} '%'</if>
            <if test="product.note != null and !&quot;&quot;.equals(product.note) ">and  t1.note like '%' #{product.note} '%'</if>
            <if test="product.itemid != null and !&quot;&quot;.equals(product.itemid) ">and t1.itemid = #{product.itemid} </if>
            <if test="product.color != null and !&quot;&quot;.equals(product.color) "> and t1.color = #{product.color} </if>
            <if test="product.productgrade != null and !&quot;&quot;.equals(product.productgrade) "> and t1.productgrade like '%' #{product.productgrade} '%'</if>
            <if test="product.reverse1 != null "> and t1.reverse1 = #{product.reverse1} </if>
            <if test="product.reverse2 != null "> and t1.reverse2 = #{product.reverse2} </if>
        </if>
        <if test="account != null">
            <if test="account.accountid != null and !&quot;&quot;.equals(account.accountid) ">and t3.accountid = #{account.accountid}</if>
            <if test="account.custtype != null and !&quot;&quot;.equals(account.custtype) ">and t3.custtype = #{account.custtype}</if>
        </if>
        <if test="salestate != null and !&quot;&quot;.equals(salestate)">
            and t2.salestate in (#{salestate})
        </if>
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>

    </select>

    <update id="updateImages4Products" parameterType="java.util.Map" >
        update tproduct set imagepath = #{imagepaths} where productid in (
            <foreach collection="list" item="item" separator="," index="index">
              #{item.productid}
            </foreach>
        )
    </update>

    <update id="updateProductInfo" parameterType="com.tibbers.zhonghui.model.Product">
        update tproduct set familyid = ''
        <if test="unitprice != null and !&quot;&quot;.equals(unitprice)"> , unitprice = #{unitprice}</if>
        <if test="productname != null and !&quot;&quot;.equals(productname)"> , productname = #{productname}</if>
        <if test="note != null and !&quot;&quot;.equals(note)"> , note = #{note}</if>
        <if test="color != null and !&quot;&quot;.equals(color)"> , color = #{color}</if>
        <if test="valuescore != null and !&quot;&quot;.equals(valuescore)"> , valuescore = #{valuescore}</if>
        <if test="transportfee != null and !&quot;&quot;.equals(transportfee)"> , transportfee = #{transportfee}</if>
        where productid = #{productid}
    </update>

    <select id="queryImagesByProductids" resultMap="imagesResult">
        select productid,imagepath from tproduct where productid in (
          <foreach collection="list" item="item" separator="," index="index">
              #{item}
          </foreach>
        )
    </select>
</mapper>