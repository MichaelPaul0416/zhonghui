<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tibbers.zhonghui.dao.IRefundDao">
    <resultMap id="RefundResult" type="java.util.Map">
        <result column="refundserailid" jdbcType="VARCHAR" property="refundserailid"/>
        <result column="accountid" jdbcType="VARCHAR" property="accountid"/>
        <result column="accountname" jdbcType="VARCHAR" property="accountname"/>
        <result column="orderid" jdbcType="VARCHAR" property="orderid"/>
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="applydatetime" jdbcType="VARCHAR" property="applydatetime"/>
        <result column="agreestate" jdbcType="VARCHAR" property="agreestate"/>
        <result column="dealdatetime" jdbcType="VARCHAR" property="dealdatetime"/>
        <result column="agreedatetime" jdbcType="VARCHAR" property="agreedatetime"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
    </resultMap>

    <!--订单中心返回退款流水-->
    <resultMap id="orderCenterObject" type="java.util.Map">
        <result column="refundserialid" jdbcType="VARCHAR" property="refundserialid"/>
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="accountid" jdbcType="VARCHAR" property="accountid"/>
        <result column="applydatetime" jdbcType="VARCHAR" property="applydatetime"/>
        <result column="agreestate" jdbcType="VARCHAR" property="agreestate"/>
        <result column="orderid" jdbcType="VARCHAR" property="orderid"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
    </resultMap>

    <select id="refundSerialsInCenter" parameterType="java.util.Map" resultMap="orderCenterObject">
        select t1.refundserialid,t1.productid,t1.accountid,t1.applydatetime,t1.agreestate,t1.orderid,t1.itemid,t1.detail,t1.amount,t2.unitprice,t2.productname,t2.valuescore,t2.productgrade,t2.fieldmeaning,t2.transportfee,t2.imagepath
        from trefund t1,tproduct t2 where t1.productid = t2.productid and t1.accountid = #{refund.accountid} and t1.agreestate = #{refund.agreestate}
        <if test="pager != null">limit #{pager.startLine},#{pager.offset}</if>
    </select>

    <insert id="insertSingelRefund" parameterType="com.tibbers.zhonghui.model.Refund">
        insert into trefund values(#{refundserailid},#{accountid},#{orderid},#{productid},#{amount},#{itemid},#{applydatetime},#{agreestate},#{dealdatetime},#{agreedatetime},#{reverse1},#{reverse2})
    </insert>

    <select id="queryRefundsByPager" parameterType="java.util.Map" resultMap="RefundResult">
        select t1.refundserialid,t1.accountid,t2.accountname,t1.orderid,t1.productid,t3.productname,t1.amount,t1.itemid,t1.applydatetime,t1.agreestate,t1.dealdatetime,t1.agreedatetime,t1.reverse1,t1.reverse2
        from trefund t1,taccount t2,tproduct t3
        where t1.accountid = t2.accountid and t1.productid = t3.productid
        <if test="refund != null">
            <if test="refund.refundserialid != null and !&quot;&quot;.equals(refund.refundserialid)">and t1.refundserialid = #{refund.refundserialid}</if>
            <if test="refund.accountid != null and !&quot;&quot;.equals(refund.accountid)">and t1.accountid = #{refund.accountid}</if>
            <if test="account != null and account.accountname != null and !&quot;&quot;.equals(account.accountname)">and t2.accountname like '%' #{account.accountname} '%'</if>
            <if test="refund.orderid != null and !&quot;&quot;.equals(refund.orderid)">and t1.orderid = #{refund.orderid}</if>
            <if test="refund.productid != null and !&quot;&quot;.equals(refund.productid)">and t1.productid = #{refund.productid}</if>
            <if test="product != null and product.productname != null and !&quot;&quot;.equals(product.productname)">and t3.productname like '%' #{product.productname} '%'</if>
            <if test="refund.itemid != null and !&quot;&quot;.equals(refund.itemid)">and t1.itemid = #{refund.itemid}</if>
            <if test="refund.agreestate != null and !&quot;&quot;.equals(refund.agreestate)">and t1.agreestate = #{refund.agreestate}</if>
            <if test="refund.reverse1 != null "> and t1.reverse1 = #{refund.reverse1}</if>
            <if test="refund.reverse2 != null "> and t1.reverse2 = #{refund.reverse2}</if>
        </if>
        ORDER by t1.agreedatetime desc
        <if test="pager != null">limit #{pager.startLine},#{pager.offset}</if>
    </select>

    <update id="uploadRefundSerialInfo" parameterType="com.tibbers.zhonghui.model.Refund">
        update trefund set
        <if test="amount != null and !&quot;&quot;.equals(amount)">amout = #{amount},</if>
        <if test="agreestate != null and !&quot;&quot;.equals(agreestate)">agreestate = #{agreestate},</if>
        <if test="dealdatetime != null and !&quot;&quot;.equals(dealdatetime)">dealdatetime = #{dealdatetime},</if>
        <if test="agreedatetime != null and !&quot;&quot;.equals(agreedatetime)">agreedatetime = #{agreedatetime},</if>
        <if test="reverse1 != null ">reverse1 = #{reverse1},</if>
        <if test="reverse2 != null ">reverse2 = #{reverse2}</if>
        where refundserailid = #{refundserailid}
    </update>
</mapper>