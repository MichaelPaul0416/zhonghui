<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--增，查，改-->
<mapper namespace="com.tibbers.zhonghui.dao.IAdministratorDao">
    <resultMap id="AdminResult" type="com.tibbers.zhonghui.model.Administrator">
        <result column="adminid" jdbcType="VARCHAR" property="adminid"/>
        <result column="adminname" jdbcType="VARCHAR" property="adminname"/>
        <result column="adminpassword" jdbcType="VARCHAR" property="adminpassword"/>
        <result column="createdatetime" jdbcType="VARCHAR" property="createdatetime"/>
        <result column="lastmodifydatetime" jdbcType="VARCHAR" property="lastmodifydatetime"/>
        <result column="identitytype" jdbcType="VARCHAR" property="identitytype"/>
        <result column="isvalid" jdbcType="VARCHAR" property="isvalid"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
    </resultMap>

    <resultMap id="saleRecord" type="java.util.Map">
        <result column="orderid" jdbcType="VARCHAR" property="orderid"/>
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="pronumber" jdbcType="VARCHAR" property="pronumber"/>
        <result column="discount" jdbcType="VARCHAR" property="discount"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
    </resultMap>
    
    <resultMap id="hotproductResults" type="java.util.Map">
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="unitprice" jdbcType="VARCHAR" property="unitprice"/>
        <result column="productname" jdbcType="VARCHAR" property="productname"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="itemid" jdbcType="VARCHAR" property="itemid"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="color" jdbcType="VARCHAR" property="color"/>
        <result column="valuescore" jdbcType="INTEGER" property="valuescore"/>
        <result column="productgrade" jdbcType="VARCHAR" property="productgrade"/>
        <result column="fieldmeaning" jdbcType="VARCHAR" property="fieldmeaning"/>
        <result column="transportfee" jdbcType="VARCHAR" property="transportfee"/>
        <result column="reverse1" jdbcType="VARCHAR" property="reverse1"/>
        <result column="reverse2" jdbcType="VARCHAR" property="reverse2"/>
        <result column="totalsale" jdbcType="INTEGER" property="totalsale"/>
        <result column="remaindernum" jdbcType="INTEGER" property="remaindernum"/>
    </resultMap>

    <resultMap id="consumeRecords" type="java.util.Map">
        <result column="accountid" jdbcType="VARCHAR" property="accountid"/>
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="accountname" jdbcType="VARCHAR" property="accountname"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="bindphone" jdbcType="VARCHAR" property="bindphone"/>
        <result column="score" jdbcType="VARCHAR" property="score"/>
        <result column="isvip" jdbcType="VARCHAR" property="isvip"/>
        <result column="custtype" jdbcType="VARCHAR" property="custtype"/>
        <result column="accobalance" jdbcType="VARCHAR" property="accobalance"/>
        <result column="codeimagepath" jdbcType="VARCHAR" property="codeimagepath"/>
        <result column="reverse" jdbcType="VARCHAR" property="reverse"/>
        <result column="finalAmount" jdbcType="VARCHAR" property="finalAmount"/>
    </resultMap>

    <resultMap id="totalRecommander" type="java.util.Map">
        <result column="accountid" jdbcType="VARCHAR" property="accountid"/>
        <result column="productid" jdbcType="VARCHAR" property="productid"/>
        <result column="accountname" jdbcType="VARCHAR" property="accountname"/>
        <result column="imagepath" jdbcType="VARCHAR" property="imagepath"/>
        <result column="bindphone" jdbcType="VARCHAR" property="bindphone"/>
        <result column="score" jdbcType="VARCHAR" property="score"/>
        <result column="isvip" jdbcType="VARCHAR" property="isvip"/>
        <result column="custtype" jdbcType="VARCHAR" property="custtype"/>
        <result column="accobalance" jdbcType="VARCHAR" property="accobalance"/>
        <result column="codeimagepath" jdbcType="VARCHAR" property="codeimagepath"/>
        <result column="reverse" jdbcType="VARCHAR" property="reverse"/>
        <result column="total" jdbcType="VARCHAR" property="total"/>
    </resultMap>
    <select id="sumTotalRecommander" parameterType="java.util.Map" resultMap="totalRecommander">
        select b.*,a.total from (select t1.recommander,count(*) as total from trecommand t1
        where t1.recommanddate &gt; #{start}
        and t1.recommanddate &lt; #{end}
        group by t1.recommander) a, taccount b
        where a.recommander = b.accountid
        order by a.total desc
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>
    </select>
    <select id="accountCustomRecordInFewMonths" parameterType="java.util.Map" resultMap="consumeRecords">
        select n.*,m.finalAmount from (
        select c.accountid ,(c.consume - c.refund) as finalAmount from(
        select a.accountid,a.consume , if(IFNULL(b.refund,0),ifnull(b.refund,0),0 )as refund from (
        select t1.accountid,/*t1.orderid,*/ sum(CAST(t1.amount AS decimal(9,2)) + CAST(t1.transportfee AS decimal(9,2)))  as consume
        from torders t1 where  t1.isvalid = '1'
        and t1.createdatetime &gt; #{start} and t1.createdatetime &lt; #{end}
        -- and t1.accountid = '210e512c68497189'
        group by  t1.accountid /*,t1.orderid*/
        -- order by consume desc
        ) a LEFT JOIN
        (
        select t2.accountid,sum(CAST(t2.amount AS decimal(9,2))) as refund from trefund t2
        where t2.applydatetime &gt; #{start} and t2.applydatetime &lt; #{end} and t2.agreestate = '2'
        group by t2.accountid
        ) b on a.accountid = b.accountid
        ) c
        )m,taccount n
        where m.accountid = n.accountid
        order by m.finalAmount desc
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>
    </select>
    
    <select id="hotProductsLastDays" parameterType="java.util.Map" resultMap="hotproductResults">
        select c.*,a.totalsale,b.remaindernum From (
            select t1.productid,sum(t1.pronumber) as totalsale from torderitem t1,torders t2
            where t1.orderid = t2.orderid and t2.isvalid = '1' and t2.createdatetime &gt; #{start} and t2.createdatetime &lt; #{end}
            group by t1.productid ) a,tproductbelong b,tproduct c
            where a.productid = b.productid and a.productid  = c.productid and b.salestate = '1'
        order by a.totalsale desc
        <if test="pager != null">
            limit #{pager.startLine},#{pager.offset}
        </if>
    </select>

    <insert id="createSingleAdmin" parameterType="com.tibbers.zhonghui.model.Administrator">
        insert into tadministrator values(#{serialid},#{adminid},#{adminname},#{adminpassword},#{createdatetime},#{lastmodifydatetime},#{identitytype},#{isvalid},#{reverse1},#{reverse2})
    </insert>

    <update id="deleteAdmin" parameterType="com.tibbers.zhonghui.model.Administrator">
        update tadministrator set isvalid = #{isvalid} where adminid = #{adminid}
    </update>

    <update id="updateInfoAdmin" parameterType="com.tibbers.zhonghui.model.Administrator">
        UPDATE  tadministrator set
         <if test="adminpassword != null and !&quot;&quot;.equals(adminpassword)">adminpassword = #{adminpassword} , </if>
         <if test="lastmodifydatetime != null and !&quot;&quot;.equals(lastmodifydatetime)">lastmodifydatetime = #{lastmodifydatetime} , </if>
         <if test="reverse1 != null and !&quot;&quot;.equals(reverse1)">reverse1 = #{reverse1} , </if>
         <if test="reverse2 != null ">reverse2 = #{reverse2} </if>
        where adminid = #{adminid}
    </update>
    
    <select id="queryAdmin" parameterType="com.tibbers.zhonghui.model.Administrator" resultMap="AdminResult">
        select adminid,adminname,adminpassword,createdatetime,lastmodifydatetime,identitytype,isvalid,reverse1,reverse2 from tadministrator
        where adminid = #{adminid} or adminname = #{adminname} and isvalid = '1'
    </select>

    <select id="queryAllAdmin" resultMap="AdminResult">
        select adminid,adminname,adminpassword,createdatetime,lastmodifydatetime,identitytype,isvalid,reverse1,reverse2 from tadministrator where isvalid = '1'
    </select>

    <select id="queryVIPSaleRecords" parameterType="java.util.Map" resultMap="saleRecord">
        select t1.orderid,t1.productid,t1.pronumber,t1.discount,t1.note,t3.productname,t3.unitprice from torderitem t1 ,torders t2 ,tproduct t3
        where t1.orderid = t2.orderid  and t1.productid = t3.productid
        and t3.productid in (select productid from tproductbelong where accountid = #{account.accountid} )
        <if test="pager != null">limit #{pager.startLine},#{pager.offset}</if>
    </select>
</mapper>